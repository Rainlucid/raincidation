using System.Linq;
using System.Numerics;
using Content.Shared._RD.Characteristics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using Robust.Shared.Utility;

namespace Content.Client._RD._Content.UI.Character;

[GenerateTypedNameReferences]
public sealed partial class RDCharacterEditorSkillsControl : BoxContainer
{
    private readonly ProtoId<RDCharacteristicGroupPrototype> _group = "Skill";

    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public RDCharacterEditorSkillsControl()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        foreach (var prototype in _prototype.EnumeratePrototypes<RDCharacteristicPrototype>().OrderBy(key => Loc.GetString(key.Name)))
        {
            if (prototype.Group != _group || !prototype.Visible)
                continue;

            Load(prototype);
            SetLegend(prototype);
        }
    }

    private void Load(RDCharacteristicPrototype prototype)
    {
        var label = new Label();
        label.Text = Loc.GetString(prototype.Name);
        ScrollContainer.AddChild(label);

        var lineEdit = new LineEdit();
        lineEdit.MinSize = new Vector2(64, 0);
        lineEdit.SetText(prototype.Medium.ToString());
        ScrollContainer.AddChild(lineEdit);
        lineEdit.OnFocusEnter += _ => SetLegend(prototype);
    }

    private void SetLegend(RDCharacteristicPrototype prototype)
    {
        var message = new FormattedMessage();
        message.AddText(Loc.GetString(prototype.Description));
        DescriptionLabel.SetMessage(message);

        if (!string.IsNullOrEmpty(prototype.Icon))
            View.TexturePath = prototype.Icon;
    }
}
